generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String                     @id @default(cuid())
  name                     String?
  email                    String?                    @unique
  emailVerified            DateTime?
  image                    String?
  role                     String?
  accounts                 Account[]
  Doctor                   Doctor?
  Hospital                 Hospital?
  Notification             Notification[]
  sessions                 Session[]
  Appointmentment_hospital Appointmentment_hospital[]
  Appointment_doctor       Appointment_doctor[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  providerAccountId String
  provider          String
  type              String
  access_token      String?
  expires_at        Int?
  id_token          String?
  refresh_token     String?
  scope             String?
  session_state     String?
  token_type        String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Doctor {
  id                 String               @id @default(cuid())
  userId             String               @unique
  name               String
  email              String
  qualification      String
  nmcRegNo           String               @map("nmc_reg_no")
  specialization     String
  about              String
  status             String               @default("pending")
  address            String
  location           String
  days_from          String
  days_to            String
  timing_from        String
  timing_to          String
  user               User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  Appointment_doctor Appointment_doctor[]
}

model Hospital {
  id                       String                     @id @default(cuid())
  name                     String
  email                    String                     @unique
  phone                    String
  address                  String
  location                 String
  description              String?
  timing_from              String
  timing_to                String
  days_from                String
  days_to                  String
  status                   String                     @default("pending")
  speciality               String
  userID                   String                     @unique
  user                     User                       @relation(fields: [userID], references: [id], onDelete: Cascade)
  Appointmentment_hospital Appointmentment_hospital[]
}

model Notification {
  id        String   @id
  userId    String
  message   String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}

model Appointmentment_hospital {
  id         String   @id @default(cuid())
  userId     String
  hospitalId String
  date       DateTime
  time       String
  reason     String
  status     String   @default("pending")
  createdAt  DateTime @default(now())

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([hospitalId])
}

model Appointment_doctor {
  id        String   @id @default(cuid())
  userId    String
  doctorId  String
  date      DateTime
  time      String
  reason    String
  status    String   @default("pending")
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  doctor Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([doctorId])
}

